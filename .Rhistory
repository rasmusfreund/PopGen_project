select(c(IID, inferred_sex)) -> metadata_simple
metadata <- read.table("data/metadata.txt", header = T, sep = "\t")
# Filtered
metadata <- metadata %>%
select(c(user, chip, inferred_sex, source)) %>%
rename(IID = user)
metadata$IID <- as.integer(metadata$IID)
metadata <- metadata %>%
filter(IID != is.na(metadata$IID))
# Formating for t-test; diff between 23andMe and others
metadata %>%
mutate(bin_source = ifelse(grepl("23andme", source, ignore.case = TRUE), TRUE, FALSE)) -> metadata
metadata %>%
group_by(bin_source) %>%
summarise(n = n())
fam <- read.table("data/GWAS_QC_rm_ibd_pc3_pheno.fam")
height <- read.table("data/height.txt")
pheno <- left_join(fam, height, by = "V1")
write.table(pheno, file = "data/GWAS_QC_rm_ibd_pc3_pheno.fam", col.names = F, row.names = F)
pheno %>%
select(c(V1, V6)) %>%
rename(IID = V1)-> pheno_simple
metadata %>%
select(c(IID, inferred_sex)) -> metadata_simple
pheno_sex <- left_join(pheno_simple, metadata_simple)
male_height <- pheno_sex %>%
filter(inferred_sex == "Male")
female_height <- pheno_sex %>%
filter(inferred_sex == "Female")
height_graph <- ggplot() +
geom_histogram(aes(female_height$V6, fill = female_height$inferred_sex),
color = "black",
size = .2,
alpha = .7,
binwidth = 2.5) +
geom_histogram(aes(male_height$V6, fill = male_height$inferred_sex),
color = "black",
size = .2,
alpha = .7,
binwidth = 2.5) +
geom_vline(xintercept = mean(female_height$V6),
linetype = 2) +
geom_vline(xintercept = mean(male_height$V6),
linetype = 2) +
labs(x = "Height (cm)",
y = "Count",
fill = "Inferred sex") +
theme_clean() +
theme(legend.background = element_rect(color = NA)) +
scale_x_continuous(breaks = seq(from = 140, to = 205, by = 5)) +
scale_fill_manual(values = c("darkorchid", "cornflowerblue")) +
guides(fill = guide_legend(override.aes = list(alpha = .7))) +
annotate(geom = "segment",
x = mean(female_height$V6), y = 65,
xend = mean(female_height$V6) - 10, yend = 63) +
geom_text(aes(x = mean(female_height$V6) - 14, y = 59,
label = paste("Mean female height:", "\n", round(mean(female_height$V6), 2), sep = " "))) +
annotate(geom = "segment",
x = mean(male_height$V6), y = 65,
xend = mean(male_height$V6) + 10, yend = 63) +
geom_text(aes(x = mean(male_height$V6) + 14, y = 59,
label = paste("Mean male height:", "\n", round(mean(male_height$V6), 2), sep = " "))) +
NULL
ggsave(plot = height_graph, filename = "height_plot.png", dpi = 300, type = "cairo", width = 9, height = 6)
height_graph <- ggplot() +
geom_histogram(aes(female_height$V6, fill = female_height$inferred_sex),
color = "black",
size = .2,
alpha = .7,
binwidth = 2.5) +
geom_histogram(aes(male_height$V6, fill = male_height$inferred_sex),
color = "black",
size = .2,
alpha = .7,
binwidth = 2.5) +
geom_vline(xintercept = mean(female_height$V6),
linetype = 2) +
geom_vline(xintercept = mean(male_height$V6),
linetype = 2) +
labs(x = "Height (cm)",
y = "Count",
fill = "Inferred sex") +
theme_clean() +
theme(legend.background = element_rect(color = NA)) +
scale_x_continuous(breaks = seq(from = 140, to = 205, by = 5)) +
scale_fill_manual(values = c("darkorchid", "cornflowerblue")) +
guides(fill = guide_legend(override.aes = list(alpha = .7))) +
annotate(geom = "segment",
x = mean(female_height$V6), y = 65,
xend = mean(female_height$V6) - 10, yend = 63) +
geom_text(aes(x = mean(female_height$V6) - 14, y = 58,
label = paste("Mean female height:", "\n", round(mean(female_height$V6), 2), sep = " "))) +
annotate(geom = "segment",
x = mean(male_height$V6), y = 65,
xend = mean(male_height$V6) + 10, yend = 63) +
geom_text(aes(x = mean(male_height$V6) + 14, y = 58,
label = paste("Mean male height:", "\n", round(mean(male_height$V6), 2), sep = " "))) +
NULL
ggsave(plot = height_graph, filename = "height_plot.png", dpi = 300, type = "cairo", width = 9, height = 6)
height_graph <- ggplot() +
geom_histogram(aes(female_height$V6, fill = female_height$inferred_sex),
color = "black",
size = .2,
alpha = .7,
binwidth = 2.5) +
geom_histogram(aes(male_height$V6, fill = male_height$inferred_sex),
color = "black",
size = .2,
alpha = .7,
binwidth = 2.5) +
geom_vline(xintercept = mean(female_height$V6),
linetype = 2) +
geom_vline(xintercept = mean(male_height$V6),
linetype = 2) +
labs(x = "Height (cm)",
y = "Count",
fill = "Inferred sex") +
theme_clean() +
theme(legend.background = element_rect(color = NA)) +
scale_x_continuous(breaks = seq(from = 140, to = 205, by = 5)) +
scale_fill_manual(values = c("darkorchid", "cornflowerblue")) +
guides(fill = guide_legend(override.aes = list(alpha = .7))) +
annotate(geom = "segment",
x = mean(female_height$V6), y = 65,
xend = mean(female_height$V6) - 10, yend = 63) +
geom_text(aes(x = mean(female_height$V6) - 14, y = 60,
label = paste("Mean female height:", "\n", round(mean(female_height$V6), 2), sep = " "))) +
annotate(geom = "segment",
x = mean(male_height$V6), y = 65,
xend = mean(male_height$V6) + 10, yend = 63) +
geom_text(aes(x = mean(male_height$V6) + 14, y = 60,
label = paste("Mean male height:", "\n", round(mean(male_height$V6), 2), sep = " "))) +
NULL
ggsave(plot = height_graph, filename = "height_plot.png", dpi = 300, type = "cairo", width = 9, height = 6)
height_graph <- ggplot() +
geom_histogram(aes(female_height$V6, fill = female_height$inferred_sex),
color = "black",
size = .2,
alpha = .7,
binwidth = 2.5) +
geom_histogram(aes(male_height$V6, fill = male_height$inferred_sex),
color = "black",
size = .2,
alpha = .7,
binwidth = 2.5) +
geom_vline(xintercept = mean(female_height$V6),
linetype = 2) +
geom_vline(xintercept = mean(male_height$V6),
linetype = 2) +
labs(x = "Height (cm)",
y = "Count",
fill = "Inferred sex") +
theme_clean() +
theme(legend.background = element_rect(color = NA)) +
scale_x_continuous(breaks = seq(from = 140, to = 205, by = 5)) +
scale_fill_manual(values = c("darkorchid", "cornflowerblue")) +
guides(fill = guide_legend(override.aes = list(alpha = .7))) +
annotate(geom = "segment",
x = mean(female_height$V6), y = 65,
xend = mean(female_height$V6) - 10, yend = 63) +
geom_text(aes(x = mean(female_height$V6) - 14, y = 60,
label = paste("Mean female height:", "\n", round(mean(female_height$V6), 2), "cm", sep = " "))) +
annotate(geom = "segment",
x = mean(male_height$V6), y = 65,
xend = mean(male_height$V6) + 10, yend = 63) +
geom_text(aes(x = mean(male_height$V6) + 14, y = 60,
label = paste("Mean male height:", "\n", round(mean(male_height$V6), 2), "cm", sep = " "))) +
NULL
ggsave(plot = height_graph, filename = "height_plot.png", dpi = 300, type = "cairo", width = 9, height = 6)
metadata
metadata %>%
group_by(source) %>%
summarise(n = n())
pca <- read.table("data/GWAS_QC_rm_ibd_LD_pca.eigenvec")
eigenvals <- read.table("data/GWAS_QC_rm_ibd_LD_pca.eigenval")
pca %>%
rename(IID = V1) -> pca
pca <- left_join(pca, metadata, by = "IID")
# PCA - outliers removed
ggplot(data = pca, aes(x = V3, y = V4, color = source)) +
geom_point() +
theme_pander() +
theme(legend.position = "none") +
labs(x = "PC1",
y = "PC2")
# Eigenvalues
ggplot(data = eigenvals) +
geom_col(aes(x = 1:20, y = V1), fill = "#234523") +
labs(x = "PC",
y = "Explained variance") +
scale_x_continuous(breaks = 1:20) +
theme_pander()
# Cumulative sum of eigenvalues
ggplot(data = eigenvals) +
geom_point(aes(x = 1:20, y = cumsum(V1))) +
labs(x = "PC",
y = "Cumulative sum") +
scale_x_continuous(breaks = 1:20) +
scale_y_continuous(limits = c(0, 100)) +
theme_pander()
pca <- read.table("data/GWAS_QC_rm_ibd_LD_pca.eigenvec")
pca %>%
ggplot(aes(V1, abs(V5))) +
geom_point() +
geom_label(aes(label = ifelse(abs(V5) > 0.2, V1, NA))) +
theme_pander()
pca %>%
filter(abs(V5) > 0.2) %>%
select(c(V1, V2)) -> wrong_pc3
write.table(wrong_pc3, "data/wrong_pc3.txt", col.names = F, row.names = F)
new_names <- paste0("PC", 1:20)
colnames(pca)[3:22] <- new_names
pca %>%
select(c(grep("PC[0-9]+", colnames(pca)),
bin_source))-> pca_selected
d_miss <- read.table("data/gwas_QC.imiss", header = T)
d_het <- read.table("data/gwas_QC.het", header = T)
d <- inner_join(d_miss, d_het)
d <- left_join(d, metadata, by = "IID")
d
# Calculate observed heterozygosity rate
d %>%
mutate(O.HET = (N.NM. - O.HOM.) / N.NM.) -> d
ggplot() +
geom_point(aes(x = d$O.HET, y = d$F_MISS, color = d$source)) +
theme_clean() +
theme(legend.position = "none") +
labs(x = "Observed heterozygosity rate",
y = "Proportion of missing SNPs")
metadata <- read.table("data/metadata.txt", header = T, sep = "\t")
# Filtered
metadata <- metadata %>%
select(c(user, chip, inferred_sex, source)) %>%
rename(IID = user)
metadata$IID <- as.integer(metadata$IID)
metadata <- metadata %>%
filter(IID != is.na(metadata$IID))
# Formating for t-test; diff between 23andMe and others
metadata %>%
mutate(bin_source = ifelse(grepl("23andme", source, ignore.case = TRUE), TRUE, FALSE)) -> metadata
metadata %>%
group_by(bin_source) %>%
summarise(n = n())
metadata %>%
group_by(source) %>%
summarise(n = n())
# Find outliers
d %>%
filter(F_MISS >= 0.95 |
O.HET > mean(O.HET) + 3 * sd(O.HET) |
O.HET < mean(O.HET) - 3 * sd(O.HET)) %>%
select(FID, IID) -> wrong_missing
write.table(wrong_missing, file = "data/wrong_missing.txt", col.names = F, row.names = F)
ibd <- read.table('data/GWAS_QC_IBD.genome', header = TRUE)
members <- ibd$FID1
members <- unique(members)
write.table(cbind(members,members), file = 'data/wrong_ibd.txt', col.names = F, row.names = F)
pca <- read.table("data/GWAS_pca.eigenvec")
ggplot(data = pca, aes(x = V3, y = V4)) +
geom_point() +
geom_label(aes(label = ifelse(V4 < -.10, V1, NA)), nudge_x = .015) +
theme_clean() +
labs(x = "PC1",
y = "PC2")
pca %>%
filter(V4 < - .10) -> pca_outliers
write.table(cbind(pca_outliers$V1, pca_outliers$V2), file = "pca_outliers.txt", col.names = F, row.names = F)
pca <- read.table("data/GWAS_pca_rm-outliers.eigenvec")
eigenvals <- read.table("data/GWAS_pca_rm-outliers.eigenval")
pca %>%
rename(IID = V1) -> pca
pca <- left_join(pca, metadata, by = "IID")
# PCA - outliers removed
ggplot(data = pca, aes(x = V3, y = V4, color = source)) +
geom_point() +
theme_pander() +
theme(legend.position = "none") +
labs(x = "PC1",
y = "PC2")
# Eigenvalues
ggplot(data = eigenvals) +
geom_col(aes(x = 1:20, y = V1), fill = "#234523") +
labs(x = "PC",
y = "Explained variance") +
scale_x_continuous(breaks = 1:20) +
theme_pander()
# Cumulative sum of eigenvalues
ggplot(data = eigenvals) +
geom_point(aes(x = 1:20, y = cumsum(V1))) +
labs(x = "PC",
y = "Cumulative sum") +
scale_x_continuous(breaks = 1:20) +
scale_y_continuous(limits = c(0, 100)) +
theme_pander()
set.seed(0)
pca %>%
rename(PC1 = V3,
PC2 = V4,
PC3 = V5) -> pca
pca %>%
select(!grep("V[0-9]+", colnames(pca))) -> pca_selected
variance_test <- tibble(Groups = c("PC1", "PC2", "PC3"),
P.value = c(
var.test(pca_selected$PC1[pca_selected$bin_source == TRUE], pca_selected$PC1[pca_selected$bin_source == FALSE])$p.value,
var.test(pca_selected$PC2[pca_selected$bin_source == TRUE], pca_selected$PC2[pca_selected$bin_source == FALSE])$p.value,
var.test(pca_selected$PC3[pca_selected$bin_source == TRUE], pca_selected$PC3[pca_selected$bin_source == FALSE])$p.value))
pca_selected %>%
summarise(PC1 = t.test(PC1[pca_selected$bin_source == TRUE],
PC1[pca_selected$bin_source == FALSE],
alternative = "two.sided",
var.equal = ifelse(variance_test$P.value[variance_test$Groups == "PC1"] < 0.05, FALSE, TRUE))$p.value,
PC2 = t.test(PC2[pca_selected$bin_source == TRUE],
PC2[pca_selected$bin_source == FALSE],
alternative = "two.sided",
var.equal = ifelse(variance_test$P.value[variance_test$Groups == "PC2"] < 0.05, FALSE, TRUE))$p.value,
PC3 = t.test(PC3[pca_selected$bin_source == TRUE],
PC3[pca_selected$bin_source == FALSE],
alternative = "two.sided",
var.equal = ifelse(variance_test$P.value[variance_test$Groups == "PC3"] < 0.05, FALSE, TRUE))$p.value)
pca <- read.table("data/GWAS_QC_rm_ibd_LD.eigenvec")
ggplot(data = pca, aes(x = V3, y = V4)) +
geom_point() +
geom_label(aes(label = ifelse(V3 > .9 | V4 < -0.02, V1, NA)), nudge_y = .015) +
theme_clean() +
labs(x = "PC1",
y = "PC2")
pca %>%
filter(V3 > .9 | V4 < -0.02) -> pca_LD_outliers
write.table(cbind(pca_LD_outliers$V1, pca_LD_outliers$V2), file = "pca_LD_outliers.txt", col.names = F, row.names = F)
pca <- read.table("data/GWAS_QC_rm_ibd_LD_pca.eigenvec")
eigenvals <- read.table("data/GWAS_QC_rm_ibd_LD_pca.eigenval")
pca %>%
rename(IID = V1) -> pca
pca <- left_join(pca, metadata, by = "IID")
# PCA - outliers removed
ggplot(data = pca, aes(x = V3, y = V4, color = source)) +
geom_point() +
theme_pander() +
theme(legend.position = "none") +
labs(x = "PC1",
y = "PC2")
# Eigenvalues
ggplot(data = eigenvals) +
geom_col(aes(x = 1:20, y = V1), fill = "#234523") +
labs(x = "PC",
y = "Explained variance") +
scale_x_continuous(breaks = 1:20) +
theme_pander()
# Cumulative sum of eigenvalues
ggplot(data = eigenvals) +
geom_point(aes(x = 1:20, y = cumsum(V1))) +
labs(x = "PC",
y = "Cumulative sum") +
scale_x_continuous(breaks = 1:20) +
scale_y_continuous(limits = c(0, 100)) +
theme_pander()
new_names <- paste0("PC", 1:20)
colnames(pca)[3:22] <- new_names
pca %>%
select(c(grep("PC[0-9]+", colnames(pca)),
bin_source))-> pca_selected
results_list <- list()
for (i in 1:(ncol(pca_selected) - 1)) {
column_name <- colnames(pca_selected)[i]
true_vals <- pca_selected[pca_selected$bin_source == TRUE, column_name]
false_vals <- pca_selected[pca_selected$bin_source == FALSE, column_name]
# Perform variance test
variance_test <- var.test(true_vals, false_vals)
# Determine var.equal
var_equal <- ifelse(variance_test$p.value < 0.05, FALSE, TRUE)
# Perform t-test
t_test <- t.test(true_vals, false_vals, alternative = "two.sided", var.equal = var_equal)
# Store result
results_list[[column_name]] <- list(variance_test = variance_test, t_test = t_test)
}
p_values <- list()
for (column_name in names(results_list)) {
t_test_result <- results_list[[column_name]]$t_test
p_value <- t_test_result$p.value
p_values[[column_name]] <- p_value
}
p_values_df <- tibble(column = names(p_values),
p_value = unlist(p_values))
p_values_df$column <- factor(p_values_df$column, levels = paste0("PC", 1:20))
ggplot(p_values_df, aes(x = column, y = -log10(p_value))) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_hline(yintercept = -log10(0.05), color = "firebrick", linetype = 2) +
labs(x = "PC", y = "-log10(P-value)") +
theme_clean()
library(qqman)
d <- read.table("data/gwa.qassoc", head = T)
d_a <- read.table("data/gwa.qassoc.adjusted", head = T)
d_a %>%
select(c(SNP, BONF)) -> d_a
d_c <- left_join(d, d_a, by = "SNP")
d_c %>%
na.omit() -> d_c
manhattan(d_c, annotatePval = 5e-8)
View(height_graph)
# PCA - outliers removed
PCA_plot <- ggplot(data = pca, aes(x = V3, y = V4, color = source)) +
geom_point() +
theme_pander() +
theme(legend.position = "none") +
labs(x = "PC1",
y = "PC2")
View(height)
ggsave(plot = PCA_plot, filename = "PCA_plot(pre-company).png", dpi = 300, type = "cairo", width = 9, height = 6)
# PCA - outliers removed
PCA_plot <- ggplot(data = pca, aes(x = V3, y = V4, color = source)) +
geom_point() +
theme_pander() +
theme(legend.position = "none") +
labs(x = "PC1",
y = "PC2")
ggsave(plot = PCA_plot, filename = "PCA_plot(pre-company).png", dpi = 300, type = "cairo", width = 9, height = 6)
pca <- read.table("data/GWAS_QC_rm_ibd_LD_pca.eigenvec")
eigenvals <- read.table("data/GWAS_QC_rm_ibd_LD_pca.eigenval")
pca %>%
rename(IID = V1) -> pca
pca <- left_join(pca, metadata, by = "IID")
# PCA - outliers removed
PCA_plot <- ggplot(data = pca, aes(x = V3, y = V4, color = source)) +
geom_point() +
theme_pander() +
theme(legend.position = "none") +
labs(x = "PC1",
y = "PC2")
ggsave(plot = PCA_plot, filename = "PCA_plot(pre-company).png", dpi = 300, type = "cairo", width = 9, height = 6)
# Eigenvalues
ggplot(data = eigenvals) +
geom_col(aes(x = 1:20, y = V1), fill = "#234523") +
labs(x = "PC",
y = "Explained variance") +
scale_x_continuous(breaks = 1:20) +
theme_pander()
company_diff <- ggplot(p_values_df, aes(x = column, y = -log10(p_value))) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_hline(yintercept = -log10(0.05), color = "firebrick", linetype = 2) +
labs(x = "PC", y = "-log10(P-value)") +
theme_clean()
ggsave(plot = company_diff, filename = "company_diff_PC.png", dpi = 300, type = "cairo", width = 9, height = 6)
d <- read.table("data/gwa.qassoc", head = T)
d <- read.table("data/gwa.qassoc", head = T)
d_a <- read.table("data/gwa.qassoc.adjusted", head = T)
d_a %>%
select(c(SNP, BONF)) -> d_a
d_c <- left_join(d, d_a, by = "SNP")
d_c <- left_join(d, d_a, by = "SNP")
d_c %>%
na.omit() -> d_c
png("manhattan_prePC_correction.png")
manhattan(d_c, annotatePval = 5e-8)
dev.off()
dev.off()
dev.off()
View(height_graph)
dev.off()
dev.off()
plot(manhattan(d_c, annotatePval = 5e-8))
dev.off()
manhattan(d_c, annotatePval = 5e-8)
View(female_height)
View(height)
install.packages("gridGraphics")
library(gridGraphics)
library(grid)
manhattan(d_c, annotatePval = 5e-8)
p <- recordPlot()
library(qqman)
library(grid)
library(gridGraphics)
d <- read.table("data/gwa.qassoc", head = T)
d_a <- read.table("data/gwa.qassoc.adjusted", head = T)
d_a %>%
select(c(SNP, BONF)) -> d_a
d_c <- left_join(d, d_a, by = "SNP")
d_c %>%
na.omit() -> d_c
manhattan(d_c, annotatePval = 5e-8)
p <- recordPlot()
g <- grid.grabExpr(grid.echo(p))
ggsave(filename = "manh_prePC_adjust.png", plot = g, dpi = 300, type = "cairo", width = 9, height = 6)
qq(d_c$P)
qq(d_c$P)
p <- recordPlot()
g <- grid.grabExpr(grid.echo(p))
ggsave(filename = "qq_prePC_adjust.png", plot = g, dpi = 300, type = "cairo", width = 9, height = 6)
lin <- read.table("data/plink.assoc.linear", head = T)
lin %>%
filter(TEST == "ADD") %>%
na.omit() -> lin
manhattan(lin, annotatePval = 5e-8)
p <- recordPlot()
g <- grid.grabExpr(grid.echo(p))
ggsave(filename = "manh_postPC_adjust.png", plot = g, dpi = 300, type = "cairo", width = 9, height = 6)
qq(lin$P)
p <- recordPlot()
g <- grid.grabExpr(grid.echo(p))
ggsave(filename = "qq_postPC_adjust.png", plot = g, dpi = 300, type = "cairo", width = 9, height = 6)
pca <- read.table("data/GWAS_QC_rm_ibd_pc3.eigenvec")
eigenvals <- read.table("data/GWAS_QC_rm_ibd_pc3.eigenval")
pca %>%
rename(IID = V1) -> pca
pca <- left_join(pca, metadata, by = "IID")
pca_post_plot <- ggplot(data = pca, aes(x = V3, y = V4, color = source)) +
geom_point() +
theme_pander() +
theme(legend.position = "none") +
labs(x = "PC1",
y = "PC2")
ggsave(filename = "PCA_plot(post-company).png", plot = pca_post_plot, dpi = 300, type = "cairo", width = 9, height = 6)
